name: check

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

env:
  DYLD_LIBRARY_PATH: ${{ github.workspace }}/lib

jobs:
  stable-check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all

      - name: moon check
        run: moon check --target native --deny-warn

      - name: format diff
        run: |
          moon fmt --check

      - name: Set ulimit and run moon test
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ulimit -s 8176
          moon test --target native
          moon test --target native --release

      - name: Setup MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Run moon test on Windows (--target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target native
      
      - name: Run moon test on Windows (--release + --target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target native --release

      - name: moon test --doc
        run: |
          moon test --doc

      - name: check exe size
        if: ${{ matrix.os != 'windows-latest' }}
        run: find ./target -name '*.exe' | xargs ls -lh

      - name: check core size on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: Get-ChildItem -Path ".\target" -Recurse -Filter "*.exe" | ForEach-Object { "{0} ({1} bytes)" -f $_.FullName, $_.Length }

  bleeding-check:
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s bleeding
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        env:
          MOONBIT_INSTALL_VERSION: bleeding
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all

      - name: Set ulimit and run moon test
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ulimit -s 8176
          moon test --target native
          moon test --target native --release

      - name: Setup MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Run moon test on Windows (--target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target native
      
      - name: Run moon test on Windows (--release + --target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target native --release

      - name: moon test --doc
        run: |
          moon test --target native --doc

      - name: moon check
        run: moon check --target native --deny-warn

      - name: check exe size
        run: find ./target -name '*.exe' | xargs ls -lh

      - name: format diff
        run: |
          moon fmt --check
